// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: meta/storage.proto

package meta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EngineType int32

const (
	EngineType_INVALID EngineType = 0
	EngineType_FS      EngineType = 1 // local fs
	EngineType_INMEM   EngineType = 2 // in-memory fs
)

// Enum value maps for EngineType.
var (
	EngineType_name = map[int32]string{
		0: "INVALID",
		1: "FS",
		2: "INMEM",
	}
	EngineType_value = map[string]int32{
		"INVALID": 0,
		"FS":      1,
		"INMEM":   2,
	}
)

func (x EngineType) Enum() *EngineType {
	p := new(EngineType)
	*p = x
	return p
}

func (x EngineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EngineType) Descriptor() protoreflect.EnumDescriptor {
	return file_meta_storage_proto_enumTypes[0].Descriptor()
}

func (EngineType) Type() protoreflect.EnumType {
	return &file_meta_storage_proto_enumTypes[0]
}

func (x EngineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EngineType.Descriptor instead.
func (EngineType) EnumDescriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{0}
}

type Transaction_State int32

const (
	Transaction_INVALID   Transaction_State = 0
	Transaction_ACTIVE    Transaction_State = 1
	Transaction_COMMITTED Transaction_State = 2
)

// Enum value maps for Transaction_State.
var (
	Transaction_State_name = map[int32]string{
		0: "INVALID",
		1: "ACTIVE",
		2: "COMMITTED",
	}
	Transaction_State_value = map[string]int32{
		"INVALID":   0,
		"ACTIVE":    1,
		"COMMITTED": 2,
	}
)

func (x Transaction_State) Enum() *Transaction_State {
	p := new(Transaction_State)
	*p = x
	return p
}

func (x Transaction_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_State) Descriptor() protoreflect.EnumDescriptor {
	return file_meta_storage_proto_enumTypes[1].Descriptor()
}

func (Transaction_State) Type() protoreflect.EnumType {
	return &file_meta_storage_proto_enumTypes[1]
}

func (x Transaction_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_State.Descriptor instead.
func (Transaction_State) EnumDescriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{6, 0}
}

type HeartBeat_Response_ServerNotification_Type int32

const (
	HeartBeat_Response_ServerNotification_INVALID                  HeartBeat_Response_ServerNotification_Type = 0
	HeartBeat_Response_ServerNotification_MODIFIED_VIRTUAL_VOLUME  HeartBeat_Response_ServerNotification_Type = 1
	HeartBeat_Response_ServerNotification_MODIFIED_PHYSICAL_VOLUME HeartBeat_Response_ServerNotification_Type = 2
	HeartBeat_Response_ServerNotification_MODIFIED_NODE            HeartBeat_Response_ServerNotification_Type = 3
)

// Enum value maps for HeartBeat_Response_ServerNotification_Type.
var (
	HeartBeat_Response_ServerNotification_Type_name = map[int32]string{
		0: "INVALID",
		1: "MODIFIED_VIRTUAL_VOLUME",
		2: "MODIFIED_PHYSICAL_VOLUME",
		3: "MODIFIED_NODE",
	}
	HeartBeat_Response_ServerNotification_Type_value = map[string]int32{
		"INVALID":                  0,
		"MODIFIED_VIRTUAL_VOLUME":  1,
		"MODIFIED_PHYSICAL_VOLUME": 2,
		"MODIFIED_NODE":            3,
	}
)

func (x HeartBeat_Response_ServerNotification_Type) Enum() *HeartBeat_Response_ServerNotification_Type {
	p := new(HeartBeat_Response_ServerNotification_Type)
	*p = x
	return p
}

func (x HeartBeat_Response_ServerNotification_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeartBeat_Response_ServerNotification_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_meta_storage_proto_enumTypes[2].Descriptor()
}

func (HeartBeat_Response_ServerNotification_Type) Type() protoreflect.EnumType {
	return &file_meta_storage_proto_enumTypes[2]
}

func (x HeartBeat_Response_ServerNotification_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeartBeat_Response_ServerNotification_Type.Descriptor instead.
func (HeartBeat_Response_ServerNotification_Type) EnumDescriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{24, 1, 0, 0}
}

type VirtualVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                 // identify a virtual volume
	CapByte           uint64   `protobuf:"varint,2,opt,name=cap_byte,json=capByte,proto3" json:"cap_byte,omitempty"`                                        // capacity of the virtual volume
	UsageByte         uint64   `protobuf:"varint,3,opt,name=usage_byte,json=usageByte,proto3" json:"usage_byte,omitempty"`                                  // usage of the virtual volume
	CreatedAt         uint64   `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                  // created time of the virtual volume
	PhysicalVolumeIds []uint64 `protobuf:"varint,5,rep,packed,name=physical_volume_ids,json=physicalVolumeIds,proto3" json:"physical_volume_ids,omitempty"` // physical volumes in the virtual volume
	ReadOnly          bool     `protobuf:"varint,6,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`                                     // read only or not
	MigrateLocked     bool     `protobuf:"varint,7,opt,name=migrate_locked,json=migrateLocked,proto3" json:"migrate_locked,omitempty"`                      // used to exclusive a migrate
}

func (x *VirtualVolume) Reset() {
	*x = VirtualVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualVolume) ProtoMessage() {}

func (x *VirtualVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualVolume.ProtoReflect.Descriptor instead.
func (*VirtualVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{0}
}

func (x *VirtualVolume) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VirtualVolume) GetCapByte() uint64 {
	if x != nil {
		return x.CapByte
	}
	return 0
}

func (x *VirtualVolume) GetUsageByte() uint64 {
	if x != nil {
		return x.UsageByte
	}
	return 0
}

func (x *VirtualVolume) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *VirtualVolume) GetPhysicalVolumeIds() []uint64 {
	if x != nil {
		return x.PhysicalVolumeIds
	}
	return nil
}

func (x *VirtualVolume) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *VirtualVolume) GetMigrateLocked() bool {
	if x != nil {
		return x.MigrateLocked
	}
	return false
}

type PhysicalVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    // identify a physical volume
	CapByte         uint64     `protobuf:"varint,2,opt,name=cap_byte,json=capByte,proto3" json:"cap_byte,omitempty"`                           // capacity of the physical volume
	UsageByte       uint64     `protobuf:"varint,3,opt,name=usage_byte,json=usageByte,proto3" json:"usage_byte,omitempty"`                     // usage of the physical volume
	CreatedAt       uint64     `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                     // created time of the physical volume
	VirtualVolumeId uint64     `protobuf:"varint,5,opt,name=virtual_volume_id,json=virtualVolumeId,proto3" json:"virtual_volume_id,omitempty"` // virtual volume of the physical volume
	StorageNodeId   uint64     `protobuf:"varint,6,opt,name=storage_node_id,json=storageNodeId,proto3" json:"storage_node_id,omitempty"`       // storage node of the physical volume
	Lock            bool       `protobuf:"varint,7,opt,name=lock,proto3" json:"lock,omitempty"`                                                // when the physical volume is locked, it cannot be used; we should lock it when do gc.
	Prefix          string     `protobuf:"bytes,8,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Threhold        float64    `protobuf:"fixed64,9,opt,name=threhold,proto3" json:"threhold,omitempty"`                      // threshold when to trigger a compact of blocks
	Type            EngineType `protobuf:"varint,10,opt,name=type,proto3,enum=hugo.v1.meta.EngineType" json:"type,omitempty"` // type of the storage engine
}

func (x *PhysicalVolume) Reset() {
	*x = PhysicalVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysicalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalVolume) ProtoMessage() {}

func (x *PhysicalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalVolume.ProtoReflect.Descriptor instead.
func (*PhysicalVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{1}
}

func (x *PhysicalVolume) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PhysicalVolume) GetCapByte() uint64 {
	if x != nil {
		return x.CapByte
	}
	return 0
}

func (x *PhysicalVolume) GetUsageByte() uint64 {
	if x != nil {
		return x.UsageByte
	}
	return 0
}

func (x *PhysicalVolume) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PhysicalVolume) GetVirtualVolumeId() uint64 {
	if x != nil {
		return x.VirtualVolumeId
	}
	return 0
}

func (x *PhysicalVolume) GetStorageNodeId() uint64 {
	if x != nil {
		return x.StorageNodeId
	}
	return 0
}

func (x *PhysicalVolume) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

func (x *PhysicalVolume) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *PhysicalVolume) GetThrehold() float64 {
	if x != nil {
		return x.Threhold
	}
	return 0
}

func (x *PhysicalVolume) GetType() EngineType {
	if x != nil {
		return x.Type
	}
	return EngineType_INVALID
}

type InoBlockMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ino uint64 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	// key of the map: block index in the file
	Map map[uint64]*BlockMeta `protobuf:"bytes,2,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *InoBlockMap) Reset() {
	*x = InoBlockMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InoBlockMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InoBlockMap) ProtoMessage() {}

func (x *InoBlockMap) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InoBlockMap.ProtoReflect.Descriptor instead.
func (*InoBlockMap) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{2}
}

func (x *InoBlockMap) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *InoBlockMap) GetMap() map[uint64]*BlockMeta {
	if x != nil {
		return x.Map
	}
	return nil
}

type BlockMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ino                uint64   `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	VirtualVolumeId    uint64   `protobuf:"varint,2,opt,name=virtual_volume_id,json=virtualVolumeId,proto3" json:"virtual_volume_id,omitempty"` // identify a virtual volume
	BlockIndexInFile   uint64   `protobuf:"varint,3,opt,name=block_index_in_file,json=blockIndexInFile,proto3" json:"block_index_in_file,omitempty"`
	PrimaryVolumeId    uint64   `protobuf:"varint,4,opt,name=primary_volume_id,json=primaryVolumeId,proto3" json:"primary_volume_id,omitempty"`                 // identify a physical volume
	SecondaryVolumeIds []uint64 `protobuf:"varint,5,rep,packed,name=secondary_volume_ids,json=secondaryVolumeIds,proto3" json:"secondary_volume_ids,omitempty"` //
	TxnId              uint64   `protobuf:"varint,7,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`                                                 // transaction id
	Len                uint64   `protobuf:"varint,8,opt,name=len,proto3" json:"len,omitempty"`
	Crc32              uint32   `protobuf:"varint,9,opt,name=crc32,proto3" json:"crc32,omitempty"`
	CreatedAt          uint64   `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`      // created time of the block
	CloudAddr          *string  `protobuf:"bytes,11,opt,name=cloud_addr,json=cloudAddr,proto3,oneof" json:"cloud_addr,omitempty"` // key of the block in the cloud storage
	BlockId            string   `protobuf:"bytes,12,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`             // unique identifier of block
}

func (x *BlockMeta) Reset() {
	*x = BlockMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMeta) ProtoMessage() {}

func (x *BlockMeta) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMeta.ProtoReflect.Descriptor instead.
func (*BlockMeta) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{3}
}

func (x *BlockMeta) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *BlockMeta) GetVirtualVolumeId() uint64 {
	if x != nil {
		return x.VirtualVolumeId
	}
	return 0
}

func (x *BlockMeta) GetBlockIndexInFile() uint64 {
	if x != nil {
		return x.BlockIndexInFile
	}
	return 0
}

func (x *BlockMeta) GetPrimaryVolumeId() uint64 {
	if x != nil {
		return x.PrimaryVolumeId
	}
	return 0
}

func (x *BlockMeta) GetSecondaryVolumeIds() []uint64 {
	if x != nil {
		return x.SecondaryVolumeIds
	}
	return nil
}

func (x *BlockMeta) GetTxnId() uint64 {
	if x != nil {
		return x.TxnId
	}
	return 0
}

func (x *BlockMeta) GetLen() uint64 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *BlockMeta) GetCrc32() uint32 {
	if x != nil {
		return x.Crc32
	}
	return 0
}

func (x *BlockMeta) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *BlockMeta) GetCloudAddr() string {
	if x != nil && x.CloudAddr != nil {
		return *x.CloudAddr
	}
	return ""
}

func (x *BlockMeta) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

type LoadConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoadConfiguration) Reset() {
	*x = LoadConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadConfiguration) ProtoMessage() {}

func (x *LoadConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadConfiguration.ProtoReflect.Descriptor instead.
func (*LoadConfiguration) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{4}
}

type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{5}
}

// Transaction describes a transaction format.
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State                     Transaction_State `protobuf:"varint,2,opt,name=state,proto3,enum=hugo.v1.meta.Transaction_State" json:"state,omitempty"`
	OtherActiveTransactionIds []uint64          `protobuf:"varint,3,rep,packed,name=other_active_transaction_ids,json=otherActiveTransactionIds,proto3" json:"other_active_transaction_ids,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{6}
}

func (x *Transaction) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Transaction) GetState() Transaction_State {
	if x != nil {
		return x.State
	}
	return Transaction_INVALID
}

func (x *Transaction) GetOtherActiveTransactionIds() []uint64 {
	if x != nil {
		return x.OtherActiveTransactionIds
	}
	return nil
}

type BeginTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeginTransaction) Reset() {
	*x = BeginTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransaction) ProtoMessage() {}

func (x *BeginTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransaction.ProtoReflect.Descriptor instead.
func (*BeginTransaction) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{7}
}

type CommitTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitTransaction) Reset() {
	*x = CommitTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransaction) ProtoMessage() {}

func (x *CommitTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransaction.ProtoReflect.Descriptor instead.
func (*CommitTransaction) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{8}
}

type RollbackTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RollbackTransaction) Reset() {
	*x = RollbackTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransaction) ProtoMessage() {}

func (x *RollbackTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransaction.ProtoReflect.Descriptor instead.
func (*RollbackTransaction) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{9}
}

type GetPhysicalVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPhysicalVolume) Reset() {
	*x = GetPhysicalVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhysicalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhysicalVolume) ProtoMessage() {}

func (x *GetPhysicalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhysicalVolume.ProtoReflect.Descriptor instead.
func (*GetPhysicalVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{10}
}

type GetVirtualVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVirtualVolume) Reset() {
	*x = GetVirtualVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualVolume) ProtoMessage() {}

func (x *GetVirtualVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualVolume.ProtoReflect.Descriptor instead.
func (*GetVirtualVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{11}
}

type ListPhysicalVolumes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPhysicalVolumes) Reset() {
	*x = ListPhysicalVolumes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhysicalVolumes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhysicalVolumes) ProtoMessage() {}

func (x *ListPhysicalVolumes) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhysicalVolumes.ProtoReflect.Descriptor instead.
func (*ListPhysicalVolumes) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{12}
}

type ListVirtualVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVirtualVolume) Reset() {
	*x = ListVirtualVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtualVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualVolume) ProtoMessage() {}

func (x *ListVirtualVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualVolume.ProtoReflect.Descriptor instead.
func (*ListVirtualVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{13}
}

type CreatePhysicalVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePhysicalVolume) Reset() {
	*x = CreatePhysicalVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhysicalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhysicalVolume) ProtoMessage() {}

func (x *CreatePhysicalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhysicalVolume.ProtoReflect.Descriptor instead.
func (*CreatePhysicalVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{14}
}

type PatchPhysicalVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PatchPhysicalVolume) Reset() {
	*x = PatchPhysicalVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchPhysicalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchPhysicalVolume) ProtoMessage() {}

func (x *PatchPhysicalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchPhysicalVolume.ProtoReflect.Descriptor instead.
func (*PatchPhysicalVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{15}
}

type CreateVirtualVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateVirtualVolume) Reset() {
	*x = CreateVirtualVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualVolume) ProtoMessage() {}

func (x *CreateVirtualVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualVolume.ProtoReflect.Descriptor instead.
func (*CreateVirtualVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{16}
}

type CreateReadOnlyVirtualVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateReadOnlyVirtualVolume) Reset() {
	*x = CreateReadOnlyVirtualVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReadOnlyVirtualVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReadOnlyVirtualVolume) ProtoMessage() {}

func (x *CreateReadOnlyVirtualVolume) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReadOnlyVirtualVolume.ProtoReflect.Descriptor instead.
func (*CreateReadOnlyVirtualVolume) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{17}
}

type GetInoBlockMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInoBlockMap) Reset() {
	*x = GetInoBlockMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInoBlockMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInoBlockMap) ProtoMessage() {}

func (x *GetInoBlockMap) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInoBlockMap.ProtoReflect.Descriptor instead.
func (*GetInoBlockMap) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{18}
}

type GetInoBlockMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInoBlockMeta) Reset() {
	*x = GetInoBlockMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInoBlockMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInoBlockMeta) ProtoMessage() {}

func (x *GetInoBlockMeta) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInoBlockMeta.ProtoReflect.Descriptor instead.
func (*GetInoBlockMeta) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{19}
}

// UpdateBlockLocation must be invoked in a transaction.
type UpdateBlockLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBlockLocation) Reset() {
	*x = UpdateBlockLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlockLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlockLocation) ProtoMessage() {}

func (x *UpdateBlockLocation) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlockLocation.ProtoReflect.Descriptor instead.
func (*UpdateBlockLocation) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{20}
}

// BatchUpdateBlockLocation must be invoked in a transaction.
type BatchUpdateBlockLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchUpdateBlockLocation) Reset() {
	*x = BatchUpdateBlockLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateBlockLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateBlockLocation) ProtoMessage() {}

func (x *BatchUpdateBlockLocation) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateBlockLocation.ProtoReflect.Descriptor instead.
func (*BatchUpdateBlockLocation) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{21}
}

type BindPhysicalVolToVirtualVol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindPhysicalVolToVirtualVol) Reset() {
	*x = BindPhysicalVolToVirtualVol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPhysicalVolToVirtualVol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPhysicalVolToVirtualVol) ProtoMessage() {}

func (x *BindPhysicalVolToVirtualVol) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPhysicalVolToVirtualVol.ProtoReflect.Descriptor instead.
func (*BindPhysicalVolToVirtualVol) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{22}
}

type UnBindPhysicalVolToVirtualVol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnBindPhysicalVolToVirtualVol) Reset() {
	*x = UnBindPhysicalVolToVirtualVol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBindPhysicalVolToVirtualVol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBindPhysicalVolToVirtualVol) ProtoMessage() {}

func (x *UnBindPhysicalVolToVirtualVol) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBindPhysicalVolToVirtualVol.ProtoReflect.Descriptor instead.
func (*UnBindPhysicalVolToVirtualVol) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{23}
}

type HeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartBeat) Reset() {
	*x = HeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat) ProtoMessage() {}

func (x *HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat.ProtoReflect.Descriptor instead.
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{24}
}

type LoadConfiguration_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoadConfiguration_Request) Reset() {
	*x = LoadConfiguration_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadConfiguration_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadConfiguration_Request) ProtoMessage() {}

func (x *LoadConfiguration_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadConfiguration_Request.ProtoReflect.Descriptor instead.
func (*LoadConfiguration_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{4, 0}
}

type LoadConfiguration_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualVolumes  []*VirtualVolume  `protobuf:"bytes,3,rep,name=virtual_volumes,json=virtualVolumes,proto3" json:"virtual_volumes,omitempty"`
	PhysicalVolumes []*PhysicalVolume `protobuf:"bytes,4,rep,name=physical_volumes,json=physicalVolumes,proto3" json:"physical_volumes,omitempty"`
}

func (x *LoadConfiguration_Response) Reset() {
	*x = LoadConfiguration_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadConfiguration_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadConfiguration_Response) ProtoMessage() {}

func (x *LoadConfiguration_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadConfiguration_Response.ProtoReflect.Descriptor instead.
func (*LoadConfiguration_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{4, 1}
}

func (x *LoadConfiguration_Response) GetVirtualVolumes() []*VirtualVolume {
	if x != nil {
		return x.VirtualVolumes
	}
	return nil
}

func (x *LoadConfiguration_Response) GetPhysicalVolumes() []*PhysicalVolume {
	if x != nil {
		return x.PhysicalVolumes
	}
	return nil
}

type Statistics_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Statistics_Request) Reset() {
	*x = Statistics_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics_Request) ProtoMessage() {}

func (x *Statistics_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics_Request.ProtoReflect.Descriptor instead.
func (*Statistics_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{5, 0}
}

type Statistics_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cap          uint64 `protobuf:"varint,1,opt,name=cap,proto3" json:"cap,omitempty"`
	Usage        uint64 `protobuf:"varint,2,opt,name=usage,proto3" json:"usage,omitempty"`
	TotalFileCnt uint64 `protobuf:"varint,3,opt,name=total_file_cnt,json=totalFileCnt,proto3" json:"total_file_cnt,omitempty"`
}

func (x *Statistics_Response) Reset() {
	*x = Statistics_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics_Response) ProtoMessage() {}

func (x *Statistics_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics_Response.ProtoReflect.Descriptor instead.
func (*Statistics_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Statistics_Response) GetCap() uint64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

func (x *Statistics_Response) GetUsage() uint64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *Statistics_Response) GetTotalFileCnt() uint64 {
	if x != nil {
		return x.TotalFileCnt
	}
	return 0
}

type BeginTransaction_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// make each virtual volume hold a transaction
	VirtualVolumeId uint64 `protobuf:"varint,1,opt,name=virtual_volume_id,json=virtualVolumeId,proto3" json:"virtual_volume_id,omitempty"`
	Ino             uint64 `protobuf:"varint,2,opt,name=ino,proto3" json:"ino,omitempty"`
}

func (x *BeginTransaction_Request) Reset() {
	*x = BeginTransaction_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginTransaction_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransaction_Request) ProtoMessage() {}

func (x *BeginTransaction_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransaction_Request.ProtoReflect.Descriptor instead.
func (*BeginTransaction_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{7, 0}
}

func (x *BeginTransaction_Request) GetVirtualVolumeId() uint64 {
	if x != nil {
		return x.VirtualVolumeId
	}
	return 0
}

func (x *BeginTransaction_Request) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

type BeginTransaction_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId uint64 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *BeginTransaction_Response) Reset() {
	*x = BeginTransaction_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginTransaction_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransaction_Response) ProtoMessage() {}

func (x *BeginTransaction_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransaction_Response.ProtoReflect.Descriptor instead.
func (*BeginTransaction_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{7, 1}
}

func (x *BeginTransaction_Response) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type CommitTransaction_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualVolumeId uint64 `protobuf:"varint,1,opt,name=virtual_volume_id,json=virtualVolumeId,proto3" json:"virtual_volume_id,omitempty"`
	TransactionId   uint64 `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Ino             uint64 `protobuf:"varint,3,opt,name=ino,proto3" json:"ino,omitempty"`
}

func (x *CommitTransaction_Request) Reset() {
	*x = CommitTransaction_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTransaction_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransaction_Request) ProtoMessage() {}

func (x *CommitTransaction_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransaction_Request.ProtoReflect.Descriptor instead.
func (*CommitTransaction_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CommitTransaction_Request) GetVirtualVolumeId() uint64 {
	if x != nil {
		return x.VirtualVolumeId
	}
	return 0
}

func (x *CommitTransaction_Request) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *CommitTransaction_Request) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

type CommitTransaction_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitTransaction_Response) Reset() {
	*x = CommitTransaction_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTransaction_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransaction_Response) ProtoMessage() {}

func (x *CommitTransaction_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransaction_Response.ProtoReflect.Descriptor instead.
func (*CommitTransaction_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{8, 1}
}

type RollbackTransaction_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualVolumeId uint64 `protobuf:"varint,1,opt,name=virtual_volume_id,json=virtualVolumeId,proto3" json:"virtual_volume_id,omitempty"`
	TransactionId   uint64 `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Ino             uint64 `protobuf:"varint,3,opt,name=ino,proto3" json:"ino,omitempty"`
}

func (x *RollbackTransaction_Request) Reset() {
	*x = RollbackTransaction_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackTransaction_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransaction_Request) ProtoMessage() {}

func (x *RollbackTransaction_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransaction_Request.ProtoReflect.Descriptor instead.
func (*RollbackTransaction_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{9, 0}
}

func (x *RollbackTransaction_Request) GetVirtualVolumeId() uint64 {
	if x != nil {
		return x.VirtualVolumeId
	}
	return 0
}

func (x *RollbackTransaction_Request) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *RollbackTransaction_Request) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

type RollbackTransaction_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RollbackTransaction_Response) Reset() {
	*x = RollbackTransaction_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackTransaction_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransaction_Response) ProtoMessage() {}

func (x *RollbackTransaction_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransaction_Response.ProtoReflect.Descriptor instead.
func (*RollbackTransaction_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{9, 1}
}

type GetPhysicalVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPhysicalVolume_Request) Reset() {
	*x = GetPhysicalVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhysicalVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhysicalVolume_Request) ProtoMessage() {}

func (x *GetPhysicalVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhysicalVolume_Request.ProtoReflect.Descriptor instead.
func (*GetPhysicalVolume_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetPhysicalVolume_Request) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPhysicalVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysicalVolume *PhysicalVolume `protobuf:"bytes,1,opt,name=physical_volume,json=physicalVolume,proto3" json:"physical_volume,omitempty"`
}

func (x *GetPhysicalVolume_Response) Reset() {
	*x = GetPhysicalVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhysicalVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhysicalVolume_Response) ProtoMessage() {}

func (x *GetPhysicalVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhysicalVolume_Response.ProtoReflect.Descriptor instead.
func (*GetPhysicalVolume_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{10, 1}
}

func (x *GetPhysicalVolume_Response) GetPhysicalVolume() *PhysicalVolume {
	if x != nil {
		return x.PhysicalVolume
	}
	return nil
}

type GetVirtualVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVirtualVolume_Request) Reset() {
	*x = GetVirtualVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualVolume_Request) ProtoMessage() {}

func (x *GetVirtualVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualVolume_Request.ProtoReflect.Descriptor instead.
func (*GetVirtualVolume_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetVirtualVolume_Request) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetVirtualVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualVolume *VirtualVolume `protobuf:"bytes,1,opt,name=virtual_volume,json=virtualVolume,proto3" json:"virtual_volume,omitempty"`
}

func (x *GetVirtualVolume_Response) Reset() {
	*x = GetVirtualVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualVolume_Response) ProtoMessage() {}

func (x *GetVirtualVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualVolume_Response.ProtoReflect.Descriptor instead.
func (*GetVirtualVolume_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{11, 1}
}

func (x *GetVirtualVolume_Response) GetVirtualVolume() *VirtualVolume {
	if x != nil {
		return x.VirtualVolume
	}
	return nil
}

type ListPhysicalVolumes_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageNodeId uint64 `protobuf:"varint,2,opt,name=storage_node_id,json=storageNodeId,proto3" json:"storage_node_id,omitempty"`
}

func (x *ListPhysicalVolumes_Request) Reset() {
	*x = ListPhysicalVolumes_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhysicalVolumes_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhysicalVolumes_Request) ProtoMessage() {}

func (x *ListPhysicalVolumes_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhysicalVolumes_Request.ProtoReflect.Descriptor instead.
func (*ListPhysicalVolumes_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListPhysicalVolumes_Request) GetStorageNodeId() uint64 {
	if x != nil {
		return x.StorageNodeId
	}
	return 0
}

type ListPhysicalVolumes_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysicalVolumes []*PhysicalVolume `protobuf:"bytes,1,rep,name=physical_volumes,json=physicalVolumes,proto3" json:"physical_volumes,omitempty"`
}

func (x *ListPhysicalVolumes_Response) Reset() {
	*x = ListPhysicalVolumes_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhysicalVolumes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhysicalVolumes_Response) ProtoMessage() {}

func (x *ListPhysicalVolumes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhysicalVolumes_Response.ProtoReflect.Descriptor instead.
func (*ListPhysicalVolumes_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{12, 1}
}

func (x *ListPhysicalVolumes_Response) GetPhysicalVolumes() []*PhysicalVolume {
	if x != nil {
		return x.PhysicalVolumes
	}
	return nil
}

type ListVirtualVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVirtualVolume_Request) Reset() {
	*x = ListVirtualVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtualVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualVolume_Request) ProtoMessage() {}

func (x *ListVirtualVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualVolume_Request.ProtoReflect.Descriptor instead.
func (*ListVirtualVolume_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{13, 0}
}

type ListVirtualVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualVolumes []*VirtualVolume `protobuf:"bytes,1,rep,name=virtual_volumes,json=virtualVolumes,proto3" json:"virtual_volumes,omitempty"`
}

func (x *ListVirtualVolume_Response) Reset() {
	*x = ListVirtualVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtualVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualVolume_Response) ProtoMessage() {}

func (x *ListVirtualVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualVolume_Response.ProtoReflect.Descriptor instead.
func (*ListVirtualVolume_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{13, 1}
}

func (x *ListVirtualVolume_Response) GetVirtualVolumes() []*VirtualVolume {
	if x != nil {
		return x.VirtualVolumes
	}
	return nil
}

type CreatePhysicalVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageNodeId uint64     `protobuf:"varint,2,opt,name=storage_node_id,json=storageNodeId,proto3" json:"storage_node_id,omitempty"`
	Type          EngineType `protobuf:"varint,3,opt,name=type,proto3,enum=hugo.v1.meta.EngineType" json:"type,omitempty"` // volume type
	Prefix        string     `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`                           // location of the mount point
	Quota         *uint64    `protobuf:"varint,5,opt,name=quota,proto3,oneof" json:"quota,omitempty"`                      // quota of storage size
	Threhold      *float64   `protobuf:"fixed64,6,opt,name=threhold,proto3,oneof" json:"threhold,omitempty"`               // max threhold when triggering the eviction
}

func (x *CreatePhysicalVolume_Request) Reset() {
	*x = CreatePhysicalVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhysicalVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhysicalVolume_Request) ProtoMessage() {}

func (x *CreatePhysicalVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhysicalVolume_Request.ProtoReflect.Descriptor instead.
func (*CreatePhysicalVolume_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CreatePhysicalVolume_Request) GetStorageNodeId() uint64 {
	if x != nil {
		return x.StorageNodeId
	}
	return 0
}

func (x *CreatePhysicalVolume_Request) GetType() EngineType {
	if x != nil {
		return x.Type
	}
	return EngineType_INVALID
}

func (x *CreatePhysicalVolume_Request) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *CreatePhysicalVolume_Request) GetQuota() uint64 {
	if x != nil && x.Quota != nil {
		return *x.Quota
	}
	return 0
}

func (x *CreatePhysicalVolume_Request) GetThrehold() float64 {
	if x != nil && x.Threhold != nil {
		return *x.Threhold
	}
	return 0
}

type CreatePhysicalVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysicalVolume *PhysicalVolume `protobuf:"bytes,1,opt,name=physical_volume,json=physicalVolume,proto3" json:"physical_volume,omitempty"`
}

func (x *CreatePhysicalVolume_Response) Reset() {
	*x = CreatePhysicalVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhysicalVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhysicalVolume_Response) ProtoMessage() {}

func (x *CreatePhysicalVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhysicalVolume_Response.ProtoReflect.Descriptor instead.
func (*CreatePhysicalVolume_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{14, 1}
}

func (x *CreatePhysicalVolume_Response) GetPhysicalVolume() *PhysicalVolume {
	if x != nil {
		return x.PhysicalVolume
	}
	return nil
}

type PatchPhysicalVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StorageNodeId uint64     `protobuf:"varint,2,opt,name=storage_node_id,json=storageNodeId,proto3" json:"storage_node_id,omitempty"`
	Type          EngineType `protobuf:"varint,3,opt,name=type,proto3,enum=hugo.v1.meta.EngineType" json:"type,omitempty"` // volume type
	Prefix        string     `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`                           // location of the mount point
	Quota         *uint64    `protobuf:"varint,5,opt,name=quota,proto3,oneof" json:"quota,omitempty"`                      // quota of storage size
	Threhold      *float64   `protobuf:"fixed64,6,opt,name=threhold,proto3,oneof" json:"threhold,omitempty"`               // max threhold when triggering the eviction
}

func (x *PatchPhysicalVolume_Request) Reset() {
	*x = PatchPhysicalVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchPhysicalVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchPhysicalVolume_Request) ProtoMessage() {}

func (x *PatchPhysicalVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchPhysicalVolume_Request.ProtoReflect.Descriptor instead.
func (*PatchPhysicalVolume_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{15, 0}
}

func (x *PatchPhysicalVolume_Request) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchPhysicalVolume_Request) GetStorageNodeId() uint64 {
	if x != nil {
		return x.StorageNodeId
	}
	return 0
}

func (x *PatchPhysicalVolume_Request) GetType() EngineType {
	if x != nil {
		return x.Type
	}
	return EngineType_INVALID
}

func (x *PatchPhysicalVolume_Request) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *PatchPhysicalVolume_Request) GetQuota() uint64 {
	if x != nil && x.Quota != nil {
		return *x.Quota
	}
	return 0
}

func (x *PatchPhysicalVolume_Request) GetThrehold() float64 {
	if x != nil && x.Threhold != nil {
		return *x.Threhold
	}
	return 0
}

type PatchPhysicalVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysicalVolume *PhysicalVolume `protobuf:"bytes,1,opt,name=physical_volume,json=physicalVolume,proto3" json:"physical_volume,omitempty"`
}

func (x *PatchPhysicalVolume_Response) Reset() {
	*x = PatchPhysicalVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchPhysicalVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchPhysicalVolume_Response) ProtoMessage() {}

func (x *PatchPhysicalVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchPhysicalVolume_Response.ProtoReflect.Descriptor instead.
func (*PatchPhysicalVolume_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{15, 1}
}

func (x *PatchPhysicalVolume_Response) GetPhysicalVolume() *PhysicalVolume {
	if x != nil {
		return x.PhysicalVolume
	}
	return nil
}

type CreateVirtualVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cap uint64 `protobuf:"varint,1,opt,name=cap,proto3" json:"cap,omitempty"`
}

func (x *CreateVirtualVolume_Request) Reset() {
	*x = CreateVirtualVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualVolume_Request) ProtoMessage() {}

func (x *CreateVirtualVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualVolume_Request.ProtoReflect.Descriptor instead.
func (*CreateVirtualVolume_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{16, 0}
}

func (x *CreateVirtualVolume_Request) GetCap() uint64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

type CreateVirtualVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualVolume *VirtualVolume `protobuf:"bytes,1,opt,name=virtual_volume,json=virtualVolume,proto3" json:"virtual_volume,omitempty"`
}

func (x *CreateVirtualVolume_Response) Reset() {
	*x = CreateVirtualVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualVolume_Response) ProtoMessage() {}

func (x *CreateVirtualVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualVolume_Response.ProtoReflect.Descriptor instead.
func (*CreateVirtualVolume_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{16, 1}
}

func (x *CreateVirtualVolume_Response) GetVirtualVolume() *VirtualVolume {
	if x != nil {
		return x.VirtualVolume
	}
	return nil
}

type CreateReadOnlyVirtualVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootIno uint64 `protobuf:"varint,1,opt,name=root_ino,json=rootIno,proto3" json:"root_ino,omitempty"`
}

func (x *CreateReadOnlyVirtualVolume_Request) Reset() {
	*x = CreateReadOnlyVirtualVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReadOnlyVirtualVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReadOnlyVirtualVolume_Request) ProtoMessage() {}

func (x *CreateReadOnlyVirtualVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReadOnlyVirtualVolume_Request.ProtoReflect.Descriptor instead.
func (*CreateReadOnlyVirtualVolume_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{17, 0}
}

func (x *CreateReadOnlyVirtualVolume_Request) GetRootIno() uint64 {
	if x != nil {
		return x.RootIno
	}
	return 0
}

type CreateReadOnlyVirtualVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualVolume *VirtualVolume `protobuf:"bytes,1,opt,name=virtual_volume,json=virtualVolume,proto3" json:"virtual_volume,omitempty"`
}

func (x *CreateReadOnlyVirtualVolume_Response) Reset() {
	*x = CreateReadOnlyVirtualVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReadOnlyVirtualVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReadOnlyVirtualVolume_Response) ProtoMessage() {}

func (x *CreateReadOnlyVirtualVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReadOnlyVirtualVolume_Response.ProtoReflect.Descriptor instead.
func (*CreateReadOnlyVirtualVolume_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{17, 1}
}

func (x *CreateReadOnlyVirtualVolume_Response) GetVirtualVolume() *VirtualVolume {
	if x != nil {
		return x.VirtualVolume
	}
	return nil
}

type GetInoBlockMap_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ino uint64 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
}

func (x *GetInoBlockMap_Request) Reset() {
	*x = GetInoBlockMap_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInoBlockMap_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInoBlockMap_Request) ProtoMessage() {}

func (x *GetInoBlockMap_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInoBlockMap_Request.ProtoReflect.Descriptor instead.
func (*GetInoBlockMap_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetInoBlockMap_Request) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

type GetInoBlockMap_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualVolumeId uint64       `protobuf:"varint,1,opt,name=virtual_volume_id,json=virtualVolumeId,proto3" json:"virtual_volume_id,omitempty"`
	InoBlockMap     *InoBlockMap `protobuf:"bytes,2,opt,name=ino_block_map,json=inoBlockMap,proto3" json:"ino_block_map,omitempty"`
}

func (x *GetInoBlockMap_Response) Reset() {
	*x = GetInoBlockMap_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInoBlockMap_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInoBlockMap_Response) ProtoMessage() {}

func (x *GetInoBlockMap_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInoBlockMap_Response.ProtoReflect.Descriptor instead.
func (*GetInoBlockMap_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{18, 1}
}

func (x *GetInoBlockMap_Response) GetVirtualVolumeId() uint64 {
	if x != nil {
		return x.VirtualVolumeId
	}
	return 0
}

func (x *GetInoBlockMap_Response) GetInoBlockMap() *InoBlockMap {
	if x != nil {
		return x.InoBlockMap
	}
	return nil
}

type GetInoBlockMeta_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ino   uint64 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`     // which file?
	Index uint64 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // block index in the file
}

func (x *GetInoBlockMeta_Request) Reset() {
	*x = GetInoBlockMeta_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInoBlockMeta_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInoBlockMeta_Request) ProtoMessage() {}

func (x *GetInoBlockMeta_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInoBlockMeta_Request.ProtoReflect.Descriptor instead.
func (*GetInoBlockMeta_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetInoBlockMeta_Request) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *GetInoBlockMeta_Request) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type GetInoBlockMeta_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockMeta *BlockMeta `protobuf:"bytes,1,opt,name=block_meta,json=blockMeta,proto3" json:"block_meta,omitempty"`
}

func (x *GetInoBlockMeta_Response) Reset() {
	*x = GetInoBlockMeta_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInoBlockMeta_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInoBlockMeta_Response) ProtoMessage() {}

func (x *GetInoBlockMeta_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInoBlockMeta_Response.ProtoReflect.Descriptor instead.
func (*GetInoBlockMeta_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{19, 1}
}

func (x *GetInoBlockMeta_Response) GetBlockMeta() *BlockMeta {
	if x != nil {
		return x.BlockMeta
	}
	return nil
}

type UpdateBlockLocation_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *BlockMeta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *UpdateBlockLocation_Request) Reset() {
	*x = UpdateBlockLocation_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlockLocation_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlockLocation_Request) ProtoMessage() {}

func (x *UpdateBlockLocation_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlockLocation_Request.ProtoReflect.Descriptor instead.
func (*UpdateBlockLocation_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{20, 0}
}

func (x *UpdateBlockLocation_Request) GetMeta() *BlockMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type UpdateBlockLocation_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBlockLocation_Response) Reset() {
	*x = UpdateBlockLocation_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlockLocation_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlockLocation_Response) ProtoMessage() {}

func (x *UpdateBlockLocation_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlockLocation_Response.ProtoReflect.Descriptor instead.
func (*UpdateBlockLocation_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{20, 1}
}

type BatchUpdateBlockLocation_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId uint64       `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Metas         []*BlockMeta `protobuf:"bytes,2,rep,name=metas,proto3" json:"metas,omitempty"`
}

func (x *BatchUpdateBlockLocation_Request) Reset() {
	*x = BatchUpdateBlockLocation_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateBlockLocation_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateBlockLocation_Request) ProtoMessage() {}

func (x *BatchUpdateBlockLocation_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateBlockLocation_Request.ProtoReflect.Descriptor instead.
func (*BatchUpdateBlockLocation_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{21, 0}
}

func (x *BatchUpdateBlockLocation_Request) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *BatchUpdateBlockLocation_Request) GetMetas() []*BlockMeta {
	if x != nil {
		return x.Metas
	}
	return nil
}

type BatchUpdateBlockLocation_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchUpdateBlockLocation_Response) Reset() {
	*x = BatchUpdateBlockLocation_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateBlockLocation_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateBlockLocation_Response) ProtoMessage() {}

func (x *BatchUpdateBlockLocation_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateBlockLocation_Response.ProtoReflect.Descriptor instead.
func (*BatchUpdateBlockLocation_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{21, 1}
}

type BindPhysicalVolToVirtualVol_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysicalVolumeId uint64 `protobuf:"varint,1,opt,name=physical_volume_id,json=physicalVolumeId,proto3" json:"physical_volume_id,omitempty"`
	VirtualVolumeId  uint64 `protobuf:"varint,2,opt,name=virtual_volume_id,json=virtualVolumeId,proto3" json:"virtual_volume_id,omitempty"`
}

func (x *BindPhysicalVolToVirtualVol_Request) Reset() {
	*x = BindPhysicalVolToVirtualVol_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPhysicalVolToVirtualVol_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPhysicalVolToVirtualVol_Request) ProtoMessage() {}

func (x *BindPhysicalVolToVirtualVol_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPhysicalVolToVirtualVol_Request.ProtoReflect.Descriptor instead.
func (*BindPhysicalVolToVirtualVol_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{22, 0}
}

func (x *BindPhysicalVolToVirtualVol_Request) GetPhysicalVolumeId() uint64 {
	if x != nil {
		return x.PhysicalVolumeId
	}
	return 0
}

func (x *BindPhysicalVolToVirtualVol_Request) GetVirtualVolumeId() uint64 {
	if x != nil {
		return x.VirtualVolumeId
	}
	return 0
}

type BindPhysicalVolToVirtualVol_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindPhysicalVolToVirtualVol_Response) Reset() {
	*x = BindPhysicalVolToVirtualVol_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPhysicalVolToVirtualVol_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPhysicalVolToVirtualVol_Response) ProtoMessage() {}

func (x *BindPhysicalVolToVirtualVol_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPhysicalVolToVirtualVol_Response.ProtoReflect.Descriptor instead.
func (*BindPhysicalVolToVirtualVol_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{22, 1}
}

type UnBindPhysicalVolToVirtualVol_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysicalVolumeId uint64 `protobuf:"varint,1,opt,name=physical_volume_id,json=physicalVolumeId,proto3" json:"physical_volume_id,omitempty"`
	VirtualVolumeId  uint64 `protobuf:"varint,2,opt,name=virtual_volume_id,json=virtualVolumeId,proto3" json:"virtual_volume_id,omitempty"`
}

func (x *UnBindPhysicalVolToVirtualVol_Request) Reset() {
	*x = UnBindPhysicalVolToVirtualVol_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBindPhysicalVolToVirtualVol_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBindPhysicalVolToVirtualVol_Request) ProtoMessage() {}

func (x *UnBindPhysicalVolToVirtualVol_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBindPhysicalVolToVirtualVol_Request.ProtoReflect.Descriptor instead.
func (*UnBindPhysicalVolToVirtualVol_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{23, 0}
}

func (x *UnBindPhysicalVolToVirtualVol_Request) GetPhysicalVolumeId() uint64 {
	if x != nil {
		return x.PhysicalVolumeId
	}
	return 0
}

func (x *UnBindPhysicalVolToVirtualVol_Request) GetVirtualVolumeId() uint64 {
	if x != nil {
		return x.VirtualVolumeId
	}
	return 0
}

type UnBindPhysicalVolToVirtualVol_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnBindPhysicalVolToVirtualVol_Response) Reset() {
	*x = UnBindPhysicalVolToVirtualVol_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBindPhysicalVolToVirtualVol_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBindPhysicalVolToVirtualVol_Response) ProtoMessage() {}

func (x *UnBindPhysicalVolToVirtualVol_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBindPhysicalVolToVirtualVol_Response.ProtoReflect.Descriptor instead.
func (*UnBindPhysicalVolToVirtualVol_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{23, 1}
}

// client send report to server
type HeartBeat_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// report the usage of each physical volume.
	Reports *HeartBeat_Request_UsageReport `protobuf:"bytes,1,opt,name=reports,proto3" json:"reports,omitempty"`
	// identify the source of the request.
	NodeId uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *HeartBeat_Request) Reset() {
	*x = HeartBeat_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat_Request) ProtoMessage() {}

func (x *HeartBeat_Request) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat_Request.ProtoReflect.Descriptor instead.
func (*HeartBeat_Request) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{24, 0}
}

func (x *HeartBeat_Request) GetReports() *HeartBeat_Request_UsageReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *HeartBeat_Request) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

// server push notification to client
type HeartBeat_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Res:
	//
	//	*HeartBeat_Response_Notifications
	//	*HeartBeat_Response_Gc
	Res isHeartBeat_Response_Res `protobuf_oneof:"res"`
}

func (x *HeartBeat_Response) Reset() {
	*x = HeartBeat_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat_Response) ProtoMessage() {}

func (x *HeartBeat_Response) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat_Response.ProtoReflect.Descriptor instead.
func (*HeartBeat_Response) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{24, 1}
}

func (m *HeartBeat_Response) GetRes() isHeartBeat_Response_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (x *HeartBeat_Response) GetNotifications() *HeartBeat_Response_ServerNotification {
	if x, ok := x.GetRes().(*HeartBeat_Response_Notifications); ok {
		return x.Notifications
	}
	return nil
}

func (x *HeartBeat_Response) GetGc() *HeartBeat_Response_GCMessage {
	if x, ok := x.GetRes().(*HeartBeat_Response_Gc); ok {
		return x.Gc
	}
	return nil
}

type isHeartBeat_Response_Res interface {
	isHeartBeat_Response_Res()
}

type HeartBeat_Response_Notifications struct {
	Notifications *HeartBeat_Response_ServerNotification `protobuf:"bytes,1,opt,name=notifications,proto3,oneof"`
}

type HeartBeat_Response_Gc struct {
	Gc *HeartBeat_Response_GCMessage `protobuf:"bytes,2,opt,name=gc,proto3,oneof"`
}

func (*HeartBeat_Response_Notifications) isHeartBeat_Response_Res() {}

func (*HeartBeat_Response_Gc) isHeartBeat_Response_Res() {}

type HeartBeat_Request_UsageReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// report the usage of each physical volume
	PhysicalVolumeUsage map[uint64]uint64 `protobuf:"bytes,1,rep,name=physical_volume_usage,json=physicalVolumeUsage,proto3" json:"physical_volume_usage,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *HeartBeat_Request_UsageReport) Reset() {
	*x = HeartBeat_Request_UsageReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat_Request_UsageReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat_Request_UsageReport) ProtoMessage() {}

func (x *HeartBeat_Request_UsageReport) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat_Request_UsageReport.ProtoReflect.Descriptor instead.
func (*HeartBeat_Request_UsageReport) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{24, 0, 0}
}

func (x *HeartBeat_Request_UsageReport) GetPhysicalVolumeUsage() map[uint64]uint64 {
	if x != nil {
		return x.PhysicalVolumeUsage
	}
	return nil
}

type HeartBeat_Response_ServerNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             HeartBeat_Response_ServerNotification_Type `protobuf:"varint,1,opt,name=type,proto3,enum=hugo.v1.meta.HeartBeat_Response_ServerNotification_Type" json:"type,omitempty"`
	VirtualVolumeId  *uint64                                    `protobuf:"varint,2,opt,name=virtual_volume_id,json=virtualVolumeId,proto3,oneof" json:"virtual_volume_id,omitempty"`
	PhysicalVolumeId *uint64                                    `protobuf:"varint,3,opt,name=physical_volume_id,json=physicalVolumeId,proto3,oneof" json:"physical_volume_id,omitempty"`
}

func (x *HeartBeat_Response_ServerNotification) Reset() {
	*x = HeartBeat_Response_ServerNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat_Response_ServerNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat_Response_ServerNotification) ProtoMessage() {}

func (x *HeartBeat_Response_ServerNotification) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat_Response_ServerNotification.ProtoReflect.Descriptor instead.
func (*HeartBeat_Response_ServerNotification) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{24, 1, 0}
}

func (x *HeartBeat_Response_ServerNotification) GetType() HeartBeat_Response_ServerNotification_Type {
	if x != nil {
		return x.Type
	}
	return HeartBeat_Response_ServerNotification_INVALID
}

func (x *HeartBeat_Response_ServerNotification) GetVirtualVolumeId() uint64 {
	if x != nil && x.VirtualVolumeId != nil {
		return *x.VirtualVolumeId
	}
	return 0
}

func (x *HeartBeat_Response_ServerNotification) GetPhysicalVolumeId() uint64 {
	if x != nil && x.PhysicalVolumeId != nil {
		return *x.PhysicalVolumeId
	}
	return 0
}

type HeartBeat_Response_GCMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When delete a file is deleted reduce the ReferenceCount of the InoAttr,
	// when the ReferenceCount is 0, means no snapshot point to the ino,
	// then we can delete all the InoAttr and the InoBlockMap.
	//
	// When the ReferenceCount is not 0, we still try to delete some data.
	// We will check if one Block is referenced, if not, we can delete the Block.
	InoBlockMaps []*InoBlockMap `protobuf:"bytes,1,rep,name=inoBlockMaps,proto3" json:"inoBlockMaps,omitempty"`
}

func (x *HeartBeat_Response_GCMessage) Reset() {
	*x = HeartBeat_Response_GCMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_storage_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat_Response_GCMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat_Response_GCMessage) ProtoMessage() {}

func (x *HeartBeat_Response_GCMessage) ProtoReflect() protoreflect.Message {
	mi := &file_meta_storage_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat_Response_GCMessage.ProtoReflect.Descriptor instead.
func (*HeartBeat_Response_GCMessage) Descriptor() ([]byte, []int) {
	return file_meta_storage_proto_rawDescGZIP(), []int{24, 1, 1}
}

func (x *HeartBeat_Response_GCMessage) GetInoBlockMaps() []*InoBlockMap {
	if x != nil {
		return x.InoBlockMaps
	}
	return nil
}

var File_meta_storage_proto protoreflect.FileDescriptor

var file_meta_storage_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x22, 0xec, 0x01, 0x0a, 0x0d, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x61, 0x70, 0x42, 0x79, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x11, 0x70, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x22, 0xc3, 0x02, 0x0a, 0x0e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x61, 0x70, 0x42, 0x79, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x68, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x74, 0x68, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x6f, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12, 0x34, 0x0a, 0x03, 0x6d, 0x61, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61,
	0x70, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a,
	0x4f, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x82, 0x03, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f,
	0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6e, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6c,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x64, 0x64, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x09, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x99, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x0f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x73, 0x22, 0x71, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x58, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6e, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x1c,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x19, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x2f, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x8e,
	0x01, 0x0a, 0x10, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x1a, 0x31, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x8f, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x69, 0x6e, 0x6f, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6e, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0x19, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x51, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0e, 0x70, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0x19, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x4e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x1a, 0x31, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x1a, 0x53, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x10, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0x09, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0xb6, 0x02, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x1a, 0xca, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x08, 0x74, 0x68,
	0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64,
	0x1a, 0x51, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0f,
	0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x52, 0x0e, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x13, 0x50, 0x61, 0x74, 0x63, 0x68, 0x50, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0xda, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x01, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x1a, 0x51, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x50, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0e, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x1a, 0x1b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x61, 0x70,
	0x1a, 0x4e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x22, 0x93, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x6c, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x1a, 0x24, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72,
	0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x6f, 0x1a, 0x4e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x1a, 0x1b, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x1a, 0x75, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x3d,
	0x0a, 0x0d, 0x69, 0x6e, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70,
	0x52, 0x0b, 0x69, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x22, 0x88, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74,
	0x61, 0x1a, 0x31, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x1a, 0x42, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x36, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x5f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01,
	0x0a, 0x1b, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x54, 0x6f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x1a, 0x63, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90,
	0x01, 0x0a, 0x1d, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x54, 0x6f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c,
	0x1a, 0x63, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x9d, 0x07, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x1a,
	0xbb, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x1a, 0xcf, 0x01, 0x0a, 0x0b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x78, 0x0a, 0x15, 0x70,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42,
	0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x13, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x46, 0x0a, 0x18, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xd1, 0x04,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x02, 0x67, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x43, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x02, 0x67, 0x63, 0x1a, 0xd6, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42,
	0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x11, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x70,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x10, 0x70, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x22, 0x61,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f,
	0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x01,
	0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x50, 0x48, 0x59,
	0x53, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10,
	0x03, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x1a, 0x4a,
	0x0a, 0x09, 0x47, 0x43, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x69,
	0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x52, 0x0c, 0x69, 0x6e,
	0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65,
	0x73, 0x2a, 0x2c, 0x0a, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x46, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x4d, 0x45, 0x4d, 0x10, 0x02, 0x32,
	0xf1, 0x11, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x66, 0x0a, 0x11, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x10, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x27, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x26, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63,
	0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x27, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x24, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x6f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x24, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61,
	0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x25, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d,
	0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x18, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x2a, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x61,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x29, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x29, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x31, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61,
	0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x1b,
	0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x54,
	0x6f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x12, 0x31, 0x2e, 0x67, 0x61,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x54, 0x6f, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x69,
	0x6e, 0x64, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x54, 0x6f, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x1d, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x54, 0x6f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x12, 0x33, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63,
	0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x54, 0x6f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x54, 0x6f, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x1f, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x61, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x2f, 0x67, 0x61, 0x69, 0x61, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meta_storage_proto_rawDescOnce sync.Once
	file_meta_storage_proto_rawDescData = file_meta_storage_proto_rawDesc
)

func file_meta_storage_proto_rawDescGZIP() []byte {
	file_meta_storage_proto_rawDescOnce.Do(func() {
		file_meta_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_storage_proto_rawDescData)
	})
	return file_meta_storage_proto_rawDescData
}

var file_meta_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_meta_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 70)
var file_meta_storage_proto_goTypes = []interface{}{
	(EngineType)(0),        // 0: hugo.v1.meta.EngineType
	(Transaction_State)(0), // 1: hugo.v1.meta.Transaction.State
	(HeartBeat_Response_ServerNotification_Type)(0), // 2: hugo.v1.meta.HeartBeat.Response.ServerNotification.Type
	(*VirtualVolume)(nil),                           // 3: hugo.v1.meta.VirtualVolume
	(*PhysicalVolume)(nil),                          // 4: hugo.v1.meta.PhysicalVolume
	(*InoBlockMap)(nil),                             // 5: hugo.v1.meta.InoBlockMap
	(*BlockMeta)(nil),                               // 6: hugo.v1.meta.BlockMeta
	(*LoadConfiguration)(nil),                       // 7: hugo.v1.meta.LoadConfiguration
	(*Statistics)(nil),                              // 8: hugo.v1.meta.Statistics
	(*Transaction)(nil),                             // 9: hugo.v1.meta.Transaction
	(*BeginTransaction)(nil),                        // 10: hugo.v1.meta.BeginTransaction
	(*CommitTransaction)(nil),                       // 11: hugo.v1.meta.CommitTransaction
	(*RollbackTransaction)(nil),                     // 12: hugo.v1.meta.RollbackTransaction
	(*GetPhysicalVolume)(nil),                       // 13: hugo.v1.meta.GetPhysicalVolume
	(*GetVirtualVolume)(nil),                        // 14: hugo.v1.meta.GetVirtualVolume
	(*ListPhysicalVolumes)(nil),                     // 15: hugo.v1.meta.ListPhysicalVolumes
	(*ListVirtualVolume)(nil),                       // 16: hugo.v1.meta.ListVirtualVolume
	(*CreatePhysicalVolume)(nil),                    // 17: hugo.v1.meta.CreatePhysicalVolume
	(*PatchPhysicalVolume)(nil),                     // 18: hugo.v1.meta.PatchPhysicalVolume
	(*CreateVirtualVolume)(nil),                     // 19: hugo.v1.meta.CreateVirtualVolume
	(*CreateReadOnlyVirtualVolume)(nil),             // 20: hugo.v1.meta.CreateReadOnlyVirtualVolume
	(*GetInoBlockMap)(nil),                          // 21: hugo.v1.meta.GetInoBlockMap
	(*GetInoBlockMeta)(nil),                         // 22: hugo.v1.meta.GetInoBlockMeta
	(*UpdateBlockLocation)(nil),                     // 23: hugo.v1.meta.UpdateBlockLocation
	(*BatchUpdateBlockLocation)(nil),                // 24: hugo.v1.meta.BatchUpdateBlockLocation
	(*BindPhysicalVolToVirtualVol)(nil),             // 25: hugo.v1.meta.BindPhysicalVolToVirtualVol
	(*UnBindPhysicalVolToVirtualVol)(nil),           // 26: hugo.v1.meta.UnBindPhysicalVolToVirtualVol
	(*HeartBeat)(nil),                               // 27: hugo.v1.meta.HeartBeat
	nil,                                             // 28: hugo.v1.meta.InoBlockMap.MapEntry
	(*LoadConfiguration_Request)(nil),               // 29: hugo.v1.meta.LoadConfiguration.Request
	(*LoadConfiguration_Response)(nil),              // 30: hugo.v1.meta.LoadConfiguration.Response
	(*Statistics_Request)(nil),                      // 31: hugo.v1.meta.Statistics.Request
	(*Statistics_Response)(nil),                     // 32: hugo.v1.meta.Statistics.Response
	(*BeginTransaction_Request)(nil),                // 33: hugo.v1.meta.BeginTransaction.Request
	(*BeginTransaction_Response)(nil),               // 34: hugo.v1.meta.BeginTransaction.Response
	(*CommitTransaction_Request)(nil),               // 35: hugo.v1.meta.CommitTransaction.Request
	(*CommitTransaction_Response)(nil),              // 36: hugo.v1.meta.CommitTransaction.Response
	(*RollbackTransaction_Request)(nil),             // 37: hugo.v1.meta.RollbackTransaction.Request
	(*RollbackTransaction_Response)(nil),            // 38: hugo.v1.meta.RollbackTransaction.Response
	(*GetPhysicalVolume_Request)(nil),               // 39: hugo.v1.meta.GetPhysicalVolume.Request
	(*GetPhysicalVolume_Response)(nil),              // 40: hugo.v1.meta.GetPhysicalVolume.Response
	(*GetVirtualVolume_Request)(nil),                // 41: hugo.v1.meta.GetVirtualVolume.Request
	(*GetVirtualVolume_Response)(nil),               // 42: hugo.v1.meta.GetVirtualVolume.Response
	(*ListPhysicalVolumes_Request)(nil),             // 43: hugo.v1.meta.ListPhysicalVolumes.Request
	(*ListPhysicalVolumes_Response)(nil),            // 44: hugo.v1.meta.ListPhysicalVolumes.Response
	(*ListVirtualVolume_Request)(nil),               // 45: hugo.v1.meta.ListVirtualVolume.Request
	(*ListVirtualVolume_Response)(nil),              // 46: hugo.v1.meta.ListVirtualVolume.Response
	(*CreatePhysicalVolume_Request)(nil),            // 47: hugo.v1.meta.CreatePhysicalVolume.Request
	(*CreatePhysicalVolume_Response)(nil),           // 48: hugo.v1.meta.CreatePhysicalVolume.Response
	(*PatchPhysicalVolume_Request)(nil),             // 49: hugo.v1.meta.PatchPhysicalVolume.Request
	(*PatchPhysicalVolume_Response)(nil),            // 50: hugo.v1.meta.PatchPhysicalVolume.Response
	(*CreateVirtualVolume_Request)(nil),             // 51: hugo.v1.meta.CreateVirtualVolume.Request
	(*CreateVirtualVolume_Response)(nil),            // 52: hugo.v1.meta.CreateVirtualVolume.Response
	(*CreateReadOnlyVirtualVolume_Request)(nil),     // 53: hugo.v1.meta.CreateReadOnlyVirtualVolume.Request
	(*CreateReadOnlyVirtualVolume_Response)(nil),    // 54: hugo.v1.meta.CreateReadOnlyVirtualVolume.Response
	(*GetInoBlockMap_Request)(nil),                  // 55: hugo.v1.meta.GetInoBlockMap.Request
	(*GetInoBlockMap_Response)(nil),                 // 56: hugo.v1.meta.GetInoBlockMap.Response
	(*GetInoBlockMeta_Request)(nil),                 // 57: hugo.v1.meta.GetInoBlockMeta.Request
	(*GetInoBlockMeta_Response)(nil),                // 58: hugo.v1.meta.GetInoBlockMeta.Response
	(*UpdateBlockLocation_Request)(nil),             // 59: hugo.v1.meta.UpdateBlockLocation.Request
	(*UpdateBlockLocation_Response)(nil),            // 60: hugo.v1.meta.UpdateBlockLocation.Response
	(*BatchUpdateBlockLocation_Request)(nil),        // 61: hugo.v1.meta.BatchUpdateBlockLocation.Request
	(*BatchUpdateBlockLocation_Response)(nil),       // 62: hugo.v1.meta.BatchUpdateBlockLocation.Response
	(*BindPhysicalVolToVirtualVol_Request)(nil),     // 63: hugo.v1.meta.BindPhysicalVolToVirtualVol.Request
	(*BindPhysicalVolToVirtualVol_Response)(nil),    // 64: hugo.v1.meta.BindPhysicalVolToVirtualVol.Response
	(*UnBindPhysicalVolToVirtualVol_Request)(nil),   // 65: hugo.v1.meta.UnBindPhysicalVolToVirtualVol.Request
	(*UnBindPhysicalVolToVirtualVol_Response)(nil),  // 66: hugo.v1.meta.UnBindPhysicalVolToVirtualVol.Response
	(*HeartBeat_Request)(nil),                       // 67: hugo.v1.meta.HeartBeat.Request
	(*HeartBeat_Response)(nil),                      // 68: hugo.v1.meta.HeartBeat.Response
	(*HeartBeat_Request_UsageReport)(nil),           // 69: hugo.v1.meta.HeartBeat.Request.UsageReport
	nil,                                             // 70: hugo.v1.meta.HeartBeat.Request.UsageReport.PhysicalVolumeUsageEntry
	(*HeartBeat_Response_ServerNotification)(nil),   // 71: hugo.v1.meta.HeartBeat.Response.ServerNotification
	(*HeartBeat_Response_GCMessage)(nil),            // 72: hugo.v1.meta.HeartBeat.Response.GCMessage
}
var file_meta_storage_proto_depIdxs = []int32{
	0,  // 0: hugo.v1.meta.PhysicalVolume.type:type_name -> hugo.v1.meta.EngineType
	28, // 1: hugo.v1.meta.InoBlockMap.map:type_name -> hugo.v1.meta.InoBlockMap.MapEntry
	1,  // 2: hugo.v1.meta.Transaction.state:type_name -> hugo.v1.meta.Transaction.State
	6,  // 3: hugo.v1.meta.InoBlockMap.MapEntry.value:type_name -> hugo.v1.meta.BlockMeta
	3,  // 4: hugo.v1.meta.LoadConfiguration.Response.virtual_volumes:type_name -> hugo.v1.meta.VirtualVolume
	4,  // 5: hugo.v1.meta.LoadConfiguration.Response.physical_volumes:type_name -> hugo.v1.meta.PhysicalVolume
	4,  // 6: hugo.v1.meta.GetPhysicalVolume.Response.physical_volume:type_name -> hugo.v1.meta.PhysicalVolume
	3,  // 7: hugo.v1.meta.GetVirtualVolume.Response.virtual_volume:type_name -> hugo.v1.meta.VirtualVolume
	4,  // 8: hugo.v1.meta.ListPhysicalVolumes.Response.physical_volumes:type_name -> hugo.v1.meta.PhysicalVolume
	3,  // 9: hugo.v1.meta.ListVirtualVolume.Response.virtual_volumes:type_name -> hugo.v1.meta.VirtualVolume
	0,  // 10: hugo.v1.meta.CreatePhysicalVolume.Request.type:type_name -> hugo.v1.meta.EngineType
	4,  // 11: hugo.v1.meta.CreatePhysicalVolume.Response.physical_volume:type_name -> hugo.v1.meta.PhysicalVolume
	0,  // 12: hugo.v1.meta.PatchPhysicalVolume.Request.type:type_name -> hugo.v1.meta.EngineType
	4,  // 13: hugo.v1.meta.PatchPhysicalVolume.Response.physical_volume:type_name -> hugo.v1.meta.PhysicalVolume
	3,  // 14: hugo.v1.meta.CreateVirtualVolume.Response.virtual_volume:type_name -> hugo.v1.meta.VirtualVolume
	3,  // 15: hugo.v1.meta.CreateReadOnlyVirtualVolume.Response.virtual_volume:type_name -> hugo.v1.meta.VirtualVolume
	5,  // 16: hugo.v1.meta.GetInoBlockMap.Response.ino_block_map:type_name -> hugo.v1.meta.InoBlockMap
	6,  // 17: hugo.v1.meta.GetInoBlockMeta.Response.block_meta:type_name -> hugo.v1.meta.BlockMeta
	6,  // 18: hugo.v1.meta.UpdateBlockLocation.Request.meta:type_name -> hugo.v1.meta.BlockMeta
	6,  // 19: hugo.v1.meta.BatchUpdateBlockLocation.Request.metas:type_name -> hugo.v1.meta.BlockMeta
	69, // 20: hugo.v1.meta.HeartBeat.Request.reports:type_name -> hugo.v1.meta.HeartBeat.Request.UsageReport
	71, // 21: hugo.v1.meta.HeartBeat.Response.notifications:type_name -> hugo.v1.meta.HeartBeat.Response.ServerNotification
	72, // 22: hugo.v1.meta.HeartBeat.Response.gc:type_name -> hugo.v1.meta.HeartBeat.Response.GCMessage
	70, // 23: hugo.v1.meta.HeartBeat.Request.UsageReport.physical_volume_usage:type_name -> hugo.v1.meta.HeartBeat.Request.UsageReport.PhysicalVolumeUsageEntry
	2,  // 24: hugo.v1.meta.HeartBeat.Response.ServerNotification.type:type_name -> hugo.v1.meta.HeartBeat.Response.ServerNotification.Type
	5,  // 25: hugo.v1.meta.HeartBeat.Response.GCMessage.inoBlockMaps:type_name -> hugo.v1.meta.InoBlockMap
	29, // 26: hugo.v1.meta.StorageMeta.LoadConfiguration:input_type -> hugo.v1.meta.LoadConfiguration.Request
	31, // 27: hugo.v1.meta.StorageMeta.Statistics:input_type -> hugo.v1.meta.Statistics.Request
	33, // 28: hugo.v1.meta.StorageMeta.BeginTransaction:input_type -> hugo.v1.meta.BeginTransaction.Request
	35, // 29: hugo.v1.meta.StorageMeta.CommitTransaction:input_type -> hugo.v1.meta.CommitTransaction.Request
	37, // 30: hugo.v1.meta.StorageMeta.RollbackTransaction:input_type -> hugo.v1.meta.RollbackTransaction.Request
	39, // 31: hugo.v1.meta.StorageMeta.GetPhysicalVolume:input_type -> hugo.v1.meta.GetPhysicalVolume.Request
	41, // 32: hugo.v1.meta.StorageMeta.GetVirtualVolume:input_type -> hugo.v1.meta.GetVirtualVolume.Request
	43, // 33: hugo.v1.meta.StorageMeta.ListPhysicalVolumes:input_type -> hugo.v1.meta.ListPhysicalVolumes.Request
	45, // 34: hugo.v1.meta.StorageMeta.ListVirtualVolume:input_type -> hugo.v1.meta.ListVirtualVolume.Request
	55, // 35: hugo.v1.meta.StorageMeta.GetInoBlockMap:input_type -> hugo.v1.meta.GetInoBlockMap.Request
	55, // 36: hugo.v1.meta.StorageMeta.GetHistoryBlockMap:input_type -> hugo.v1.meta.GetInoBlockMap.Request
	57, // 37: hugo.v1.meta.StorageMeta.GetInoBlockMeta:input_type -> hugo.v1.meta.GetInoBlockMeta.Request
	59, // 38: hugo.v1.meta.StorageMeta.UpdateBlockLocation:input_type -> hugo.v1.meta.UpdateBlockLocation.Request
	61, // 39: hugo.v1.meta.StorageMeta.BatchUpdateBlockLocation:input_type -> hugo.v1.meta.BatchUpdateBlockLocation.Request
	47, // 40: hugo.v1.meta.StorageMeta.CreatePhysicalVolume:input_type -> hugo.v1.meta.CreatePhysicalVolume.Request
	49, // 41: hugo.v1.meta.StorageMeta.PatchPhysicalVolume:input_type -> hugo.v1.meta.PatchPhysicalVolume.Request
	51, // 42: hugo.v1.meta.StorageMeta.CreateVirtualVolume:input_type -> hugo.v1.meta.CreateVirtualVolume.Request
	53, // 43: hugo.v1.meta.StorageMeta.CreateReadOnlyVirtualVolume:input_type -> hugo.v1.meta.CreateReadOnlyVirtualVolume.Request
	63, // 44: hugo.v1.meta.StorageMeta.BindPhysicalVolToVirtualVol:input_type -> hugo.v1.meta.BindPhysicalVolToVirtualVol.Request
	65, // 45: hugo.v1.meta.StorageMeta.UnBindPhysicalVolToVirtualVol:input_type -> hugo.v1.meta.UnBindPhysicalVolToVirtualVol.Request
	67, // 46: hugo.v1.meta.StorageMeta.HeartBeat:input_type -> hugo.v1.meta.HeartBeat.Request
	30, // 47: hugo.v1.meta.StorageMeta.LoadConfiguration:output_type -> hugo.v1.meta.LoadConfiguration.Response
	32, // 48: hugo.v1.meta.StorageMeta.Statistics:output_type -> hugo.v1.meta.Statistics.Response
	34, // 49: hugo.v1.meta.StorageMeta.BeginTransaction:output_type -> hugo.v1.meta.BeginTransaction.Response
	36, // 50: hugo.v1.meta.StorageMeta.CommitTransaction:output_type -> hugo.v1.meta.CommitTransaction.Response
	38, // 51: hugo.v1.meta.StorageMeta.RollbackTransaction:output_type -> hugo.v1.meta.RollbackTransaction.Response
	40, // 52: hugo.v1.meta.StorageMeta.GetPhysicalVolume:output_type -> hugo.v1.meta.GetPhysicalVolume.Response
	42, // 53: hugo.v1.meta.StorageMeta.GetVirtualVolume:output_type -> hugo.v1.meta.GetVirtualVolume.Response
	44, // 54: hugo.v1.meta.StorageMeta.ListPhysicalVolumes:output_type -> hugo.v1.meta.ListPhysicalVolumes.Response
	46, // 55: hugo.v1.meta.StorageMeta.ListVirtualVolume:output_type -> hugo.v1.meta.ListVirtualVolume.Response
	56, // 56: hugo.v1.meta.StorageMeta.GetInoBlockMap:output_type -> hugo.v1.meta.GetInoBlockMap.Response
	56, // 57: hugo.v1.meta.StorageMeta.GetHistoryBlockMap:output_type -> hugo.v1.meta.GetInoBlockMap.Response
	58, // 58: hugo.v1.meta.StorageMeta.GetInoBlockMeta:output_type -> hugo.v1.meta.GetInoBlockMeta.Response
	60, // 59: hugo.v1.meta.StorageMeta.UpdateBlockLocation:output_type -> hugo.v1.meta.UpdateBlockLocation.Response
	62, // 60: hugo.v1.meta.StorageMeta.BatchUpdateBlockLocation:output_type -> hugo.v1.meta.BatchUpdateBlockLocation.Response
	48, // 61: hugo.v1.meta.StorageMeta.CreatePhysicalVolume:output_type -> hugo.v1.meta.CreatePhysicalVolume.Response
	50, // 62: hugo.v1.meta.StorageMeta.PatchPhysicalVolume:output_type -> hugo.v1.meta.PatchPhysicalVolume.Response
	52, // 63: hugo.v1.meta.StorageMeta.CreateVirtualVolume:output_type -> hugo.v1.meta.CreateVirtualVolume.Response
	54, // 64: hugo.v1.meta.StorageMeta.CreateReadOnlyVirtualVolume:output_type -> hugo.v1.meta.CreateReadOnlyVirtualVolume.Response
	64, // 65: hugo.v1.meta.StorageMeta.BindPhysicalVolToVirtualVol:output_type -> hugo.v1.meta.BindPhysicalVolToVirtualVol.Response
	66, // 66: hugo.v1.meta.StorageMeta.UnBindPhysicalVolToVirtualVol:output_type -> hugo.v1.meta.UnBindPhysicalVolToVirtualVol.Response
	68, // 67: hugo.v1.meta.StorageMeta.HeartBeat:output_type -> hugo.v1.meta.HeartBeat.Response
	47, // [47:68] is the sub-list for method output_type
	26, // [26:47] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_meta_storage_proto_init() }
func file_meta_storage_proto_init() {
	if File_meta_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meta_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysicalVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InoBlockMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhysicalVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhysicalVolumes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtualVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhysicalVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchPhysicalVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReadOnlyVirtualVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInoBlockMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInoBlockMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlockLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateBlockLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPhysicalVolToVirtualVol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBindPhysicalVolToVirtualVol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadConfiguration_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadConfiguration_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginTransaction_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginTransaction_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTransaction_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTransaction_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackTransaction_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackTransaction_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhysicalVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhysicalVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhysicalVolumes_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhysicalVolumes_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtualVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtualVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhysicalVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhysicalVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchPhysicalVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchPhysicalVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReadOnlyVirtualVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReadOnlyVirtualVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInoBlockMap_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInoBlockMap_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInoBlockMeta_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInoBlockMeta_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlockLocation_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlockLocation_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateBlockLocation_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateBlockLocation_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPhysicalVolToVirtualVol_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPhysicalVolToVirtualVol_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBindPhysicalVolToVirtualVol_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBindPhysicalVolToVirtualVol_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat_Request_UsageReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat_Response_ServerNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_storage_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat_Response_GCMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_meta_storage_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_meta_storage_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_meta_storage_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_meta_storage_proto_msgTypes[65].OneofWrappers = []interface{}{
		(*HeartBeat_Response_Notifications)(nil),
		(*HeartBeat_Response_Gc)(nil),
	}
	file_meta_storage_proto_msgTypes[68].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_storage_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   70,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meta_storage_proto_goTypes,
		DependencyIndexes: file_meta_storage_proto_depIdxs,
		EnumInfos:         file_meta_storage_proto_enumTypes,
		MessageInfos:      file_meta_storage_proto_msgTypes,
	}.Build()
	File_meta_storage_proto = out.File
	file_meta_storage_proto_rawDesc = nil
	file_meta_storage_proto_goTypes = nil
	file_meta_storage_proto_depIdxs = nil
}
