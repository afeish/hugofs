// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: storage/volume.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EngineType int32

const (
	EngineType_INVALID EngineType = 0
	EngineType_FS      EngineType = 1 // local fs
	EngineType_INMEM   EngineType = 2 // in-memory fs
)

// Enum value maps for EngineType.
var (
	EngineType_name = map[int32]string{
		0: "INVALID",
		1: "FS",
		2: "INMEM",
	}
	EngineType_value = map[string]int32{
		"INVALID": 0,
		"FS":      1,
		"INMEM":   2,
	}
)

func (x EngineType) Enum() *EngineType {
	p := new(EngineType)
	*p = x
	return p
}

func (x EngineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EngineType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_volume_proto_enumTypes[0].Descriptor()
}

func (EngineType) Type() protoreflect.EnumType {
	return &file_storage_volume_proto_enumTypes[0]
}

func (x EngineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EngineType.Descriptor instead.
func (EngineType) EnumDescriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{0}
}

type MountVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MountVolume) Reset() {
	*x = MountVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountVolume) ProtoMessage() {}

func (x *MountVolume) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountVolume.ProtoReflect.Descriptor instead.
func (*MountVolume) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{0}
}

type GetVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVolume) Reset() {
	*x = GetVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolume) ProtoMessage() {}

func (x *GetVolume) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolume.ProtoReflect.Descriptor instead.
func (*GetVolume) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{1}
}

type ListVolumes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVolumes) Reset() {
	*x = ListVolumes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVolumes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumes) ProtoMessage() {}

func (x *ListVolumes) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumes.ProtoReflect.Descriptor instead.
func (*ListVolumes) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{2}
}

type PhysicalVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // identify a physical volume
	Type       EngineType `protobuf:"varint,2,opt,name=type,proto3,enum=hugo.v1.storage.EngineType" json:"type,omitempty"` // volume type
	Prefix     string     `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`                              // location of the mount point
	Quota      uint64     `protobuf:"varint,4,opt,name=quota,proto3" json:"quota,omitempty"`                               // quota of storage size
	Threhold   float64    `protobuf:"fixed64,5,opt,name=threhold,proto3" json:"threhold,omitempty"`                        // max threhold when triggering the eviction
	InuseBytes uint64     `protobuf:"varint,6,opt,name=inuse_bytes,json=inuseBytes,proto3" json:"inuse_bytes,omitempty"`   // max threhold when triggering the eviction
	NodeId     uint64     `protobuf:"varint,7,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`               // storage node of the physical volume
	CreatedAt  uint64     `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`      // created time of the physical volume
	Lock       bool       `protobuf:"varint,9,opt,name=lock,proto3" json:"lock,omitempty"`                                 // when the physical volume is locked, it cannot be used; we should lock it when do gc.
}

func (x *PhysicalVolume) Reset() {
	*x = PhysicalVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysicalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalVolume) ProtoMessage() {}

func (x *PhysicalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalVolume.ProtoReflect.Descriptor instead.
func (*PhysicalVolume) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{3}
}

func (x *PhysicalVolume) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PhysicalVolume) GetType() EngineType {
	if x != nil {
		return x.Type
	}
	return EngineType_INVALID
}

func (x *PhysicalVolume) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *PhysicalVolume) GetQuota() uint64 {
	if x != nil {
		return x.Quota
	}
	return 0
}

func (x *PhysicalVolume) GetThrehold() float64 {
	if x != nil {
		return x.Threhold
	}
	return 0
}

func (x *PhysicalVolume) GetInuseBytes() uint64 {
	if x != nil {
		return x.InuseBytes
	}
	return 0
}

func (x *PhysicalVolume) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *PhysicalVolume) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PhysicalVolume) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

type MountVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // identify a physical volume
	Type     EngineType `protobuf:"varint,2,opt,name=type,proto3,enum=hugo.v1.storage.EngineType" json:"type,omitempty"` // volume type
	Prefix   string     `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`                              // location of the mount point
	Quota    *uint64    `protobuf:"varint,4,opt,name=quota,proto3,oneof" json:"quota,omitempty"`                         // quota of storage size
	Threhold *float64   `protobuf:"fixed64,5,opt,name=threhold,proto3,oneof" json:"threhold,omitempty"`                  // max threhold when triggering the eviction
}

func (x *MountVolume_Request) Reset() {
	*x = MountVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountVolume_Request) ProtoMessage() {}

func (x *MountVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountVolume_Request.ProtoReflect.Descriptor instead.
func (*MountVolume_Request) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MountVolume_Request) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MountVolume_Request) GetType() EngineType {
	if x != nil {
		return x.Type
	}
	return EngineType_INVALID
}

func (x *MountVolume_Request) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *MountVolume_Request) GetQuota() uint64 {
	if x != nil && x.Quota != nil {
		return *x.Quota
	}
	return 0
}

func (x *MountVolume_Request) GetThrehold() float64 {
	if x != nil && x.Threhold != nil {
		return *x.Threhold
	}
	return 0
}

type MountVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId uint64 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *MountVolume_Response) Reset() {
	*x = MountVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountVolume_Response) ProtoMessage() {}

func (x *MountVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountVolume_Response.ProtoReflect.Descriptor instead.
func (*MountVolume_Response) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{0, 1}
}

func (x *MountVolume_Response) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type GetVolume_PrefixQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   EngineType `protobuf:"varint,2,opt,name=type,proto3,enum=hugo.v1.storage.EngineType" json:"type,omitempty"` // volume type
	Prefix string     `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`                              // location of the mount point
}

func (x *GetVolume_PrefixQuery) Reset() {
	*x = GetVolume_PrefixQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVolume_PrefixQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolume_PrefixQuery) ProtoMessage() {}

func (x *GetVolume_PrefixQuery) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolume_PrefixQuery.ProtoReflect.Descriptor instead.
func (*GetVolume_PrefixQuery) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetVolume_PrefixQuery) GetType() EngineType {
	if x != nil {
		return x.Type
	}
	return EngineType_INVALID
}

func (x *GetVolume_PrefixQuery) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type GetVolume_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query_:
	//
	//	*GetVolume_Request_Query
	//	*GetVolume_Request_Id
	Query_ isGetVolume_Request_Query_ `protobuf_oneof:"Query"`
}

func (x *GetVolume_Request) Reset() {
	*x = GetVolume_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVolume_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolume_Request) ProtoMessage() {}

func (x *GetVolume_Request) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolume_Request.ProtoReflect.Descriptor instead.
func (*GetVolume_Request) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{1, 1}
}

func (m *GetVolume_Request) GetQuery_() isGetVolume_Request_Query_ {
	if m != nil {
		return m.Query_
	}
	return nil
}

func (x *GetVolume_Request) GetQuery() *GetVolume_PrefixQuery {
	if x, ok := x.GetQuery_().(*GetVolume_Request_Query); ok {
		return x.Query
	}
	return nil
}

func (x *GetVolume_Request) GetId() uint64 {
	if x, ok := x.GetQuery_().(*GetVolume_Request_Id); ok {
		return x.Id
	}
	return 0
}

type isGetVolume_Request_Query_ interface {
	isGetVolume_Request_Query_()
}

type GetVolume_Request_Query struct {
	Query *GetVolume_PrefixQuery `protobuf:"bytes,1,opt,name=query,proto3,oneof"`
}

type GetVolume_Request_Id struct {
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3,oneof"`
}

func (*GetVolume_Request_Query) isGetVolume_Request_Query_() {}

func (*GetVolume_Request_Id) isGetVolume_Request_Query_() {}

type GetVolume_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume *PhysicalVolume `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *GetVolume_Response) Reset() {
	*x = GetVolume_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVolume_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolume_Response) ProtoMessage() {}

func (x *GetVolume_Response) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolume_Response.ProtoReflect.Descriptor instead.
func (*GetVolume_Response) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{1, 2}
}

func (x *GetVolume_Response) GetVolume() *PhysicalVolume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type ListVolumes_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVolumes_Request) Reset() {
	*x = ListVolumes_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVolumes_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumes_Request) ProtoMessage() {}

func (x *ListVolumes_Request) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumes_Request.ProtoReflect.Descriptor instead.
func (*ListVolumes_Request) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{2, 0}
}

type ListVolumes_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volumes []*PhysicalVolume `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *ListVolumes_Response) Reset() {
	*x = ListVolumes_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_volume_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVolumes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumes_Response) ProtoMessage() {}

func (x *ListVolumes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_storage_volume_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumes_Response.ProtoReflect.Descriptor instead.
func (*ListVolumes_Response) Descriptor() ([]byte, []int) {
	return file_storage_volume_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ListVolumes_Response) GetVolumes() []*PhysicalVolume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

var File_storage_volume_proto protoreflect.FileDescriptor

var file_storage_volume_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0xb5, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x08, 0x74, 0x68, 0x72,
	0x65, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x1a,
	0x23, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x1a, 0x56, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0x64, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x43, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x73, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x45, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x0e, 0x50, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x75, 0x73, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x6f, 0x63,
	0x6b, 0x2a, 0x2c, 0x0a, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x46, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x4d, 0x45, 0x4d, 0x10, 0x02, 0x32,
	0x9d, 0x02, 0x0a, 0x0d, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x24, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x73, 0x12, 0x24, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x74, 0x65,
	0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x61, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2f, 0x67,
	0x61, 0x69, 0x61, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storage_volume_proto_rawDescOnce sync.Once
	file_storage_volume_proto_rawDescData = file_storage_volume_proto_rawDesc
)

func file_storage_volume_proto_rawDescGZIP() []byte {
	file_storage_volume_proto_rawDescOnce.Do(func() {
		file_storage_volume_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_volume_proto_rawDescData)
	})
	return file_storage_volume_proto_rawDescData
}

var file_storage_volume_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_volume_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_storage_volume_proto_goTypes = []interface{}{
	(EngineType)(0),               // 0: hugo.v1.storage.EngineType
	(*MountVolume)(nil),           // 1: hugo.v1.storage.MountVolume
	(*GetVolume)(nil),             // 2: hugo.v1.storage.GetVolume
	(*ListVolumes)(nil),           // 3: hugo.v1.storage.ListVolumes
	(*PhysicalVolume)(nil),        // 4: hugo.v1.storage.PhysicalVolume
	(*MountVolume_Request)(nil),   // 5: hugo.v1.storage.MountVolume.Request
	(*MountVolume_Response)(nil),  // 6: hugo.v1.storage.MountVolume.Response
	(*GetVolume_PrefixQuery)(nil), // 7: hugo.v1.storage.GetVolume.PrefixQuery
	(*GetVolume_Request)(nil),     // 8: hugo.v1.storage.GetVolume.Request
	(*GetVolume_Response)(nil),    // 9: hugo.v1.storage.GetVolume.Response
	(*ListVolumes_Request)(nil),   // 10: hugo.v1.storage.ListVolumes.Request
	(*ListVolumes_Response)(nil),  // 11: hugo.v1.storage.ListVolumes.Response
}
var file_storage_volume_proto_depIdxs = []int32{
	0,  // 0: hugo.v1.storage.PhysicalVolume.type:type_name -> hugo.v1.storage.EngineType
	0,  // 1: hugo.v1.storage.MountVolume.Request.type:type_name -> hugo.v1.storage.EngineType
	0,  // 2: hugo.v1.storage.GetVolume.PrefixQuery.type:type_name -> hugo.v1.storage.EngineType
	7,  // 3: hugo.v1.storage.GetVolume.Request.query:type_name -> hugo.v1.storage.GetVolume.PrefixQuery
	4,  // 4: hugo.v1.storage.GetVolume.Response.volume:type_name -> hugo.v1.storage.PhysicalVolume
	4,  // 5: hugo.v1.storage.ListVolumes.Response.volumes:type_name -> hugo.v1.storage.PhysicalVolume
	5,  // 6: hugo.v1.storage.VolumeService.MountVolume:input_type -> hugo.v1.storage.MountVolume.Request
	8,  // 7: hugo.v1.storage.VolumeService.GetVolume:input_type -> hugo.v1.storage.GetVolume.Request
	10, // 8: hugo.v1.storage.VolumeService.ListVolumes:input_type -> hugo.v1.storage.ListVolumes.Request
	6,  // 9: hugo.v1.storage.VolumeService.MountVolume:output_type -> hugo.v1.storage.MountVolume.Response
	9,  // 10: hugo.v1.storage.VolumeService.GetVolume:output_type -> hugo.v1.storage.GetVolume.Response
	11, // 11: hugo.v1.storage.VolumeService.ListVolumes:output_type -> hugo.v1.storage.ListVolumes.Response
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_storage_volume_proto_init() }
func file_storage_volume_proto_init() {
	if File_storage_volume_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_storage_volume_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVolumes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysicalVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVolume_PrefixQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVolume_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVolume_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVolumes_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_volume_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVolumes_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_storage_volume_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_storage_volume_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*GetVolume_Request_Query)(nil),
		(*GetVolume_Request_Id)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_volume_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storage_volume_proto_goTypes,
		DependencyIndexes: file_storage_volume_proto_depIdxs,
		EnumInfos:         file_storage_volume_proto_enumTypes,
		MessageInfos:      file_storage_volume_proto_msgTypes,
	}.Build()
	File_storage_volume_proto = out.File
	file_storage_volume_proto_rawDesc = nil
	file_storage_volume_proto_goTypes = nil
	file_storage_volume_proto_depIdxs = nil
}
